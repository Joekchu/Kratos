SET(CMAKE_INCLUDE_CURRENT_DIR ON)

# Generate variables with the sources
FILE(GLOB_RECURSE MUPARSER_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/muparser/*.cpp") #all .cpp

# Compile library
ADD_LIBRARY(muparser SHARED ${MUPARSER_SOURCES})

# In case of using Cotire
IF(USE_COTIRE MATCHES ON)
    cotire(muparser)
ENDIF(USE_COTIRE MATCHES ON)

# Define include and library
SET(MUPARSER_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/muparser/)
SET(MUPARSER_LIBRARIES muparser)

# This compiles the "DLL" interface (C API)
TARGET_COMPILE_DEFINITIONS(muparser PRIVATE MUPARSER_DLL)

# Static libraries
TARGET_COMPILE_DEFINITIONS(muparser PRIVATE MUPARSERLIB_EXPORTS)

# Enable OpenMP
IF (KRATOS_SHARED_MEMORY_PARALLELIZATION STREQUAL "OpenMP")
    TARGET_COMPILE_DEFINITIONS(muparser PRIVATE MUP_USE_OPENMP)
ENDIF (KRATOS_SHARED_MEMORY_PARALLELIZATION STREQUAL "OpenMP")

# Install targets
INSTALL(TARGETS muparser DESTINATION libs)

# Printing a message
MESSAGE(STATUS "muparser : ${MUPARSER_INCLUDE_DIR}" )
